@model IEnumerable<FrxCbotset>
@{
    var actionName = ViewContext.RouteData.Values["action"].ToString();
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
    ViewData["action"] = actionName;
    ViewData["controller"] = controllerName;
    ViewData["area"] = areaName;
    ViewData["Title"] = controllerName;
    string path = "/" + areaName + "/" + controllerName;
}
<section class="content-header">
    <h1>
        @ViewData["action"]
        <small>@ViewData["controller"]</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @ViewData["area"]</a></li>
        <li class="active"> @ViewData["controller"]</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    @*<h3 class="box-title">Data Table With Full Features</h3>*@
                </div>
                <!-- /.box-header -->
                <div class="box-body table-responsive">
                    <table id="example1" class="table  table-bordered table-striped table-hover" onmouseover="eFresh();" onmouseout="sFresh();">
                        <thead>
                            <tr>
                                <th>
                                    Symbol
                                </th>
                                <th>
                                    Volume
                                </th>
                                <th>
                                    Tmr
                                </th>
                                <th>
                                    Brk
                                </th>
                                <th>
                                    Distance
                                </th>
                                <th>
                                    IsTrade
                                </th>
                                <th>
                                    IsBreak
                                </th>
                                <th>
                                    IsBrkFirst
                                </th>
                                <th>
                                    R/A/M/S
                                </th>
                                <th>
                                    Cr
                                </th>
                                <th>
                                    Ca
                                </th>
                                <th>
                                    Sr
                                </th>
                                <th>
                                    Sa
                                </th>
                                <th>
                                    Ra
                                </th>
                                <th>
                                    Signal
                                </th>
                                <th>
                                    Sbrk
                                </th>
                                <th>
                                    Alike
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                double srsa = 0;
                                if (item.Sr.HasValue && item.Sa.HasValue)
                                {
                                    srsa = Math.Abs((double)(item.Sr - item.Sa));
                                }
                                string isbrk = null;
                                if (Math.Abs((double)item.Sr) > item.Brk)
                                {
                                    isbrk = "break";
                                }
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Symbol)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.InitVolume)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem=>item.Tmr)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Brk)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Distance)
                                    </td>
                                    <td>
                                        <input type="checkbox" checked="@item.IsTrade" class="flat-blue" />
                                    </td>
                                    <td>
                                        <input type="checkbox" checked="@item.IsBreak" class="flat-blue" />
                                    </td>
                                    <td>
                                        <input type="checkbox" checked="@item.IsBrkFirst" class="flat-blue" />
                                    </td>
                                    <td>
                                        @item.Result/@item.Average/@item.Magnify/@item.Sub
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Cr)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Ca)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Sr)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Sa)
                                    </td>
                                    <td>
                                        @srsa
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Signal)
                                    </td>
                                    <td>
                                        @isbrk
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Alike)
                                    </td>
                                    <td style="min-width:150px">
                                        <a id="editModal" data-toggle="modal" asp-action="Edit" asp-route-id="@item.Id" data-target="#modal-action" class="btn-sm btn-primary" style="width:70px;margin-right:5px; min-width:50px;">
                                            <i class="glyphicon glyphicon-pencil"></i> Edit
                                        </a>
                                        <a id="deleteModal" data-toggle="modal" asp-action="Delete" asp-route-id="@item.Id" data-target="#modal-action" class="btn-sm btn-warning" style="width:70px;margin-right:5px; min-width:50px;">
                                            <i class="glyphicon glyphicon-trash"></i> Delete
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
@section Scripts{
    <script>
    $(function () {
        $('#example1').DataTable(
            {
            'order': [[14, "desc"]],
            'pageLength':10,
            initComplete: function () {
                $("#mytool").append('<a id="createModal" data-toggle="modal" data-target="#modal-action" class="btn btn-primary" href="@path/Create"><i class="glyphicon glyphicon-plus"></i> Create</a>');
            }
        })
        $('#example2').DataTable({
            'paging': true,
            'lengthChange': false,
            'searching': false,
            'ordering': true,
            'info': true,
            'autoWidth': false
        })
    })

        var stop = 1;
        function myrefresh() {
            if (stop == 1) {
                window.location.reload();
            }
        }
        setTimeout('myrefresh()', 1000 * 60); //指定刷新时间60秒一刷
        function eFresh() {
            stop = 0;
        }
        function sFresh() {
            stop = 1;
            setTimeout('myrefresh()', 1000 * 60);
        }
    </script>
}
