@model Tuple<ConnectAPI, List<FrxAccount>>
@{
    var actionName = ViewContext.RouteData.Values["action"].ToString();
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
    ViewData["action"] = actionName;
    ViewData["controller"] = controllerName;
    ViewData["area"] = areaName;
    ViewData["Title"] = controllerName;
    string path = "/" + areaName + "/" + controllerName;
}
<!--Style-->
<style>
    .table th {
        text-align: center !important;
    }

    .table td {
        text-align: center !important;
    }

    .description-text {
        color: darkgray !important;
    }
</style>
<!---Content-Header-->
<section class="content-header hidden-xs">
    <h1>
        @ViewData["action"]
        <small>@ViewData["controller"]</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @ViewData["area"]</a></li>
        <li class="active"> @ViewData["controller"]</li>
    </ol>
</section>
<!--Content-->
<section class="content">
    <div class="row">
        <div class="col-lg-3 col-md-12 col-sm-12 col-xs-12">
            <!--新建订单-->
            <div id="new-box" class="box box-solid collapsed-box">
                <div class="box-header with-border">
                    <h3 class="box-title">新建订单</h3>
                    <div class="box-tools">
                        <button type="button" class="btn btn-box-tool" id="new-tool" data-widget="collapse">
                            <i class="fa fa-plus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon">买价</span>
                            <input id="new-ask" type="text" class="form-control" placeholder="1.02451" disabled="disabled" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                            <span class="input-group-addon">卖价</span>
                            <input id="new-bid" type="text" class="form-control" placeholder="1.04578" disabled="disabled" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">品种</span>
                            <select id="new-symbol" class="form-control select2" style="width: 100%;"></select>
                            <span title="是否可以从持仓明细中选择，默认为不可以" class="input-group-addon"><input type="checkbox" id="symbolcheck" class="flat-blue" /></span>
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">数量</span>
                            <input id="new-volume" type="text" class="form-control clear-data" placeholder="数量" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">多空</span>
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="买（多）" disabled="disabled">
                                <span class="input-group-addon"><input type="radio" id="new-tradetypebuy" name="new-tradetype" value="buy" class="flat-red" checked /></span>
                                <input type="text" class="form-control" placeholder="卖（空）" disabled="disabled">
                                <span class="input-group-addon"><input type="radio" id="new-tradetypesell" name="new-tradetype" value="sell" class="flat-red" /></span>
                            </div>

                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">止赢</span>
                            <input id="new-takeprofitpips" type="text" class="form-control clear-data" placeholder="止赢点数 可选" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">止损</span>
                            <input id="new-stoplosspips" type="text" class="form-control clear-data" placeholder="止损点数 可选" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">注释</span>
                            <input id="new-comment" type="text" class="form-control clear-data" placeholder="可选">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">标签</span>
                            <input id="new-label" type="text" class="form-control clear-data" placeholder="不可用" disabled="disabled">
                        </div>
                        <br>
                        <button id="btn-new" class="btn btn-primary btn-block margin-bottom">提交</button>
                    </div>
                </div>
            </div>
            <!--修改订单-->
            <div id="amend-box" class="box box-solid collapsed-box">
                <div class="box-header with-border">
                    <h3 class="box-title">修改订单</h3>
                    <div class="box-tools">
                        <button type="button" class="btn btn-box-tool" id="amend-tool" data-widget="collapse">
                            <i class="fa fa-plus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="form-group">
                        <div class="input-group">
                            <span class="input-group-addon">单号</span>
                            <input id="amend-id" type="text" class="form-control clear-data" placeholder="请从持仓明细中选择" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">品种</span>
                            <input id="amend-symbol" type="text" class="form-control clear-data" placeholder="自动填充" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral" disabled="disabled">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">多空</span>
                            <input id="amend-tradeSide" type="text" class="form-control clear-data" placeholder="开仓价 自动填充" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral" disabled="disabled">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">价格</span>
                            <input id="amend-price" type="text" class="form-control clear-data" placeholder="开仓价 自动填充" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral" disabled="disabled">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">止赢</span>
                            <input id="amend-takeprofitprice" type="text" class="form-control clear-data" placeholder="止赢价 可选" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                        </div>
                        <br>
                        <div class="input-group">
                            <span class="input-group-addon">止损</span>
                            <input id="amend-stoplossprice" type="text" class="form-control clear-data" placeholder="止损价 可选" style="font-family:'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;color:coral">
                        </div>
                        <br>
                        <button id="btn-amend" class="btn btn-primary btn-block margin-bottom">提交</button>
                    </div>
                </div>
            </div>
            <!--快捷命令-->
            <div id="order-box" class="box box-solid collapsed-box">
                <div class="box-header with-border">
                    <h3 class="box-title">快捷命令</h3>
                    <div class="box-tools">
                        <button type="button" class="btn btn-box-tool" id="order-tool" data-widget="collapse">
                            <i class="fa fa-plus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body" style="padding:20px;">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-xs-6">
                                <button id="close-all" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">全部</span>&emsp;平仓</button>
                            </div>
                            <div class="col-xs-6">
                                <button id="close-selected" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">选中</span>&emsp;平仓</button>
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-xs-6">
                                <button id="close-buy" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">买多</span>&emsp;平仓</button>
                            </div>
                            <div class="col-xs-6">
                                <button id="close-sell" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">卖空</span>&emsp;平仓</button>
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-xs-6">
                                <button id="close-win" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">赢利</span>&emsp;平仓</button>
                            </div>
                            <div class="col-xs-6">
                                <button id="close-loss" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">亏损</span>&emsp;平仓</button>
                            </div>
                        </div>
                        <br>
                        <div class="row">
                            <div class="col-xs-6">
                                <button id="close-double" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">加倍</span>&emsp;选中单</button>
                            </div>
                            <div class="col-xs-6">
                                <button id="close-reverse" class="btn btn-primary btn-block margin-bottom"><span style="color:yellow">反转</span>&emsp;选中单</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-9 col-md-12 col-sm-12 col-xs-12">
            <!--持仓明细-->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">持仓明细</h3>

                    <div class="box-tools pull-right">
                        <div class="has-feedback">
                            <input id="search" type="text" class="form-control input-sm" placeholder="搜索">
                            <span class="glyphicon glyphicon-search form-control-feedback"></span>
                        </div>
                    </div>
                </div>
                <div class="box-body" style="padding:0px 5px;">
                    <div class="mailbox-controls">
                        @*<button title="全选" type="button" class="btn btn-default btn-sm checkbox-toggle">
                                <i class="fa fa-square-o"></i>
                            </button>*@
                        <button id="close-selected2" title="关闭选中的订单" type="button" class="btn btn-default btn-sm"><i class="fa fa-trash-o"></i></button>
                        <div class="pull-right">
                            <div class="btn-group">
                                <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" title="切换账号">
                                    <i class="fa fa-wrench"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-left" role="menu">
                                    @foreach (var f in Model.Item2)
                                    {
                                        <li><a href="@Url.Action("Index","Proto",new { acId=f.AccountId })"><i class="fa fa-circle-o text-light-blue"></i>@f.AccountNumber</a></li>
                                    }
                                </ul>
                            </div>
                            <div class="btn-group">
                                <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" title="显示隐藏列">
                                    <i class="fa fa-th-list"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-left" role="menu">
                                    <li><input type="checkbox" class="toggle-vis" data-column="1" />&emsp;<small>品种ID</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="2" />&emsp;<small>标签</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="3" />&emsp;<small>注释</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="4" />&emsp;<small>平台</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="8" />&emsp;<small>手数</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="10" />&emsp;<small>修改时间</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="15" />&emsp;<small>保证金</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="16" />&emsp;<small>佣金</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="17" />&emsp;<small>利息</small></li>
                                    <li><input type="checkbox" class="toggle-vis" data-column="18" />&emsp;<small>点数</small></li>
                                </ul>
                            </div>
                            <button id="refrash" title="刷新持仓明细" type="button" class="btn btn-default btn-sm"><i class="fa fa-refresh"></i></button>
                        </div>
                    </div>
                    <div class="table-responsive  mailbox-messages">
                        <table id="table-pos" class="table table-hover" width="100%">
                            <thead>
                                <tr>
                                    <th>ID</th>  
                                    <th class="col-visible">品种ID</th>
                                    <th class="col-visible">标签</th>
                                    <th class="col-visible">注释</th>
                                    <th class="col-visible">平台</th>
                                    <th>品种</th>
                                    <th>多空</th>
                                    <th>数量</th>
                                    <th  class="col-visible">手数</th>
                                    <th class="hidden-xs col-hidden">开仓时间</th>
                                    <th class="col-visible">修改时间</th>
                                    <th class="hidden-xs col-hidden">开仓价</th>
                                    <th class="hidden-xs col-hidden">当前价</th>
                                    <th class="hidden-xs col-hidden">止赢</th>
                                    <th class="hidden-xs col-hidden">止损</th>
                                    <th class="col-visible">保证金</th>
                                    <th class="col-visible">佣金</th>
                                    <th class="col-visible col-color">利息</th>
                                    <th class="col-visible col-color">点数</th>
                                    <th class="col-color">利润</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <div class="box-footer no-padding">
                    <div class="mailbox-controls">
                        <div class="col-md-2 col-sm-4 col-xs-6">
                            <div class="description-block border-right">
                                <h5 id="balance" class="description-header"></h5>
                                <span class="description-text">账户余额</span>
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6">
                            <div class="description-block border-right">
                                <h5 id="equity" class="description-header"></h5>
                                <span class="description-text">账户净值</span>
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6">
                            <div class="description-block border-right">
                                <h5 id="unrnet" class="description-header" style="color:#4cae05"></h5>
                                <span class="description-text">账户净浮动</span>
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6">
                            <div class="description-block border-right">
                                <h5 id="marginUsed" class="description-header"></h5>
                                <span class="description-text">已用保证金</span>
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6">
                            <div class="description-block border-right">
                                <h5 id="freeMargin" class="description-header"></h5>
                                <span class="description-text">可用保证金</span>
                            </div>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6">
                            <div class="description-block">
                                <h5 id="marginLevel" class="description-header"></h5>
                                <span class="description-text">保证金水平</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts{
    <script>
    $(function () {
        //初始化参数
        var _connect =@Html.Raw(Json.Serialize(Model.Item1));
        var _symbols = [];
        var _selectedPositions = [];
        var _allPositions = [];

        //#region Ajax
        //#region Ajax optionAjax
        var optionAjax = {
            type: "post",
            async: true,
            url: "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: {},
            success: function (result) {
            },
            error: function (errorMsg) {
                alert("请求数据失败!");
            }
        };
        //#endregion

        //#region Ajax GetSymbol
        function GetSymbol() {
            optionAjax.url = "/Forex/Proto/GetSymbol";
            optionAjax.data = JSON.stringify({});
            optionAjax.success = function (result) {
                _symbols = result.data;
                GetSymbolList();
            };

            $.ajax(optionAjax);
        };
        //#endregion

        //#region Ajax GetPrice
        function GetPrice() {
            var tempsymbolname = $("#new-symbol").find("option:selected").text();
            if (tempsymbolname.length==0)
                tempsymbolname = "EURUSD";
            optionAjax.url = "/Forex/Proto/GetPrice";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                apiUrl: _connect.apiUrl,
                accessToken: _connect.accessToken,
            });
            optionAjax.success = function (result) {
                $.each(result.data, function () {
                    if (this.symbolName == tempsymbolname) {
                        $("#new-ask").val(this.lastAsk);
                        $("#new-bid").val(this.lastBid);
                    }
                });
                setTimeout(GetPrice(), 1000);
            };
            optionAjax.error = function (errorMsg) {};

            $.ajax(optionAjax);
        };
        //#endregion

        //#region Ajax GetPosition
        function GetPosition() {
            optionAjax.url = "/Forex/Proto/GetPosition";
            optionAjax.data = JSON.stringify({ accountId: _connect.accountId, apiUrl: _connect.apiUrl, accessToken: _connect.accessToken });
            optionAjax.success = function (result) {
                table_pos.api().clear();
                table_pos.api().rows.add(result.data).draw();
                _allPositions = [];
                FillterAllPositions(result.data);
            };

            $.ajax(optionAjax);
        };
        //#endregion

        //#region Ajax RefrashPosition
        function RefrashPosition() {
            GetAccountInfo();
        };
        //#endregion

        //#region Ajax GetAccountInfo
        function GetAccountInfo() {
            optionAjax.url = "/Forex/Proto/GetAccountInfo";
            optionAjax.data = JSON.stringify({ accountId: _connect.accountId, apiUrl: _connect.apiUrl, accessToken: _connect.accessToken, balance: _connect.balance, preciseLeverage: _connect.preciseLeverage });
            optionAjax.success = function (result) {
                //计算账号数据
                CalculateAccount(result.accountinfo);
                //重绘表格
                table_pos.api().clear();
                table_pos.api().rows.add(result.positions).draw();
                //填充返回时的选择订单
                _allPositions = [];
                FillterAllPositions(result.positions);
            };

            $.ajax(optionAjax);
        };
        //#endregion

        //#region Ajax SendMarketOrder
        function SendMarketOrder() {
            optionAjax.url = "/Forex/Proto/SendMarketOrder";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl:_connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret:_connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                symbolName: $("#new-symbol").find("option:selected").text(),
                tradeSide: GetRadioValue("new-tradetype"),
                volume: $("#new-volume").val(),
                stopLossInPips: $("#new-stoplosspips").val(),
                takeProfitInPips:$("#new-takeprofitpips").val(),
                comment:$("#new-comment").val(),
            });
            optionAjax.success = function (result) {
                RefrashPosition();
            };

            $.ajax(optionAjax);
        };
        $("#btn-new").click(function () { SendMarketOrder()});
        //#endregion

        //#region Ajax SendDoublePositions
        function SendDoublePositions() {
            optionAjax.url = "/Forex/Proto/SendResetPosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType:"double",
                selectedPositions:_selectedPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-double").click(function () { SendDoublePositions() });
        //#endregion

        //#region Ajax SendReversePositions
        function SendReversePositions() {
            optionAjax.url = "/Forex/Proto/SendResetPosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType: "reverse",
                selectedPositions: _selectedPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-reverse").click(function () { SendReversePositions() });
        //#endregion

        //#region Ajax SendAmendPosition
        function SendAmendPosition() {
            optionAjax.url = "/Forex/Proto/SendAmendPosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                positionId: $("#amend-id").val(),
                stopLossPrice: $("#amend-stoplossprice").val(),
                takeProfitPrice: $("#amend-takeprofitprice").val(),
            });
            optionAjax.success = function (result) {
                RefrashPosition();
            };

            $.ajax(optionAjax);
        };
        $("#btn-amend").click(function () { SendAmendPosition() });
        //#endregion

        //#region Ajax SendSelectedPositions
        function SendSelectedPositions() {
            optionAjax.url = "/Forex/Proto/SendClosePosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType:"selected",
                selectedPositions:_selectedPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-selected,#close-selected2").click(function () { SendSelectedPositions() });
        //#endregion

        //#region Ajax SendAllPositions
        function SendAllPositions() {
            optionAjax.url = "/Forex/Proto/SendClosePosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType:"all",
                selectedPositions:_allPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-all").click(function () { SendAllPositions() });
        //#endregion

        //#region Ajax SendBuyPositions
        function SendBuyPositions() {
            var tempallpos = _allPositions.filter(function (item) {
                return item.tradeSide.toLowerCase() == "buy";
            });
            _allPositions = tempallpos;
            optionAjax.url = "/Forex/Proto/SendClosePosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType: "buy",
                selectedPositions: _allPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-buy").click(function () { SendBuyPositions() });
        //#endregion

        //#region Ajax SendSellPositions
        function SendSellPositions() {
            var tempallpos = _allPositions.filter(function (item) {
                return item.tradeSide.toLowerCase() == "sell";
            });
            _allPositions = tempallpos;
            optionAjax.url = "/Forex/Proto/SendClosePosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType: "sell",
                selectedPositions: _allPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-sell").click(function () { SendSellPositions() });
        //#endregion

        //#region Ajax SendWinPositions
        function SendWinPositions() {
            var tempallpos = _allPositions.filter(function (item) {
                return item.netProfit>0;
            });
            _allPositions = tempallpos;
            optionAjax.url = "/Forex/Proto/SendClosePosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType: "win",
                selectedPositions: _allPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-win").click(function () { SendWinPositions() });
        //#endregion

        //#region Ajax SendLossPositions
        function SendLossPositions() {
            var tempallpos = _allPositions.filter(function (item) {
                return item.netProfit<0;
            });
            _allPositions = tempallpos;
            optionAjax.url = "/Forex/Proto/SendClosePosition";
            optionAjax.data = JSON.stringify({
                accountId: _connect.accountId,
                connectUrl: _connect.connectUrl,
                apiUrl: _connect.apiUrl,
                apiHost: _connect.apiHost,
                apiPort: _connect.apiPort,
                clientId: _connect.clientId,
                clientSecret: _connect.clientSecret,
                accessToken: _connect.accessToken,
                refreshToken: _connect.refreshToken,
                selectedType: "loss",
                selectedPositions: _allPositions,
            });
            optionAjax.success = function (result) {
                RefrashPosition();
                _selectedPositions = [];
            };

            $.ajax(optionAjax);
        };
        $("#close-loss").click(function () { SendLossPositions() });
        //#endregion
        //#endregion

        //#region 填充_allPostions数据
        function FillterAllPositions(data) {
            $.each(data, function () {
                var tempnet = this.swap + this.commission * 2 + this.profit;
                var tempfillter = {
                    positionId: this.positionId,
                    volume: this.volume,
                    tradeSide: this.tradeSide,
                    netProfit: tempnet,
                    symbolName: this.symbolName,
                };
                _allPositions.push(tempfillter);
            });
        };
        //#endregion

        //#region 计算显示账号的数据
        function CalculateAccount(data) {
            if (data != null) {
                $("#balance").text(data.balance.toFixed(2));
                $("#equity").text(data.equity.toFixed(2));
                $("#unrnet").text(data.unrNet.toFixed(2));
                $("#marginUsed").text(data.marginUsed.toFixed(2));
                $("#freeMargin").text(data.freeMargin.toFixed(2));
                $("#marginLevel").text(data.marginLevel.toFixed(2) + " %");
                if (data.unrNet > 0) {
                    $("#unrnet").css('color', '#4cae05');
                }
                else {
                    $("#unrnet").css('color', '#ff5256');
                }
            }
        };
        //#endregion

        //#region 初始化table_pos
        var table_pos = $('#table-pos').dataTable(
            {
                order: [[9, "desc"]],
                info: false,
                paging: false,
                dom:
                    "<'row'<'col-sm-6'><'col-sm-6'>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                processing: true,
                data: [],
                language: {
                    processing: "加载中...",
                    lengthMenu: "每页显示 _MENU_ 条数据",
                    zeroRecords: "没有匹配结果",
                    info: "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
                    infoEmpty: "显示第 0 至 0 项结果，共 0 项",
                    infoFiltered: "(由 _MAX_ 项结果过滤)",
                    infoPostFix: "",
                    search: "搜索:",
                    url: "",
                    emptyTable: "没有匹配结果",
                    loadingRecords: "载入中...",
                    thousands: ",",
                    paginate: {
                        first: "首页",
                        previous: "上一页",
                        next: "下一页",
                        last: "末页"
                    },
                    aria: {
                        sortAscending: ": 以升序排列此列",
                        sortDescending: ": 以降序排列此列"
                    }
                },
                columns: [
                    { data: "positionId" },
                    { data: "symbolId" },
                    { data: "label" },
                    { data: "comment" },
                    { data: "channel" },
                    { data: "symbolName" },
                    { data: "tradeSide" },
                    { data: "volume" },
                    { data: "lot" },
                    { data: "entryTimestamp" },
                    { data: "utcLastUpdateTimestamp" },
                    { data: "entryPrice" },
                    { data: "currentPrice" },
                    { data: "takeProfit" },
                    { data: "stopLoss" },
                    { data: "marginRate" },
                    { data: "commission" },
                    { data: "swap" },
                    { data: "profitInPips" },
                    { data: "profit" },
                ],
                columnDefs: [
                    {
                        targets: "col-visible",
                        visible: false,
                    },
                    {
                        targets: "col-color-hidden",
                        createdCell: function (td, cellData, rowData, row, col) {
                            if (cellData > 0)
                                $(td).css('color', '#4cae05');
                            else
                                $(td).css('color', '#ff5256');
                            $(td).addClass(" hidden-xs");
                        },
                    },
                    {
                        targets: "col-hidden",
                        createdCell: function (td, cellData, rowData, row, col) {
                            $(td).addClass(" hidden-xs");
                        },
                    },
                    {
                        targets: "col-color",
                        createdCell: function (td, cellData, rowData, row, col) {
                            if (cellData > 0)
                                $(td).css('color', '#4cae05');
                            else
                                $(td).css('color', '#ff5256');
                        },
                    },
                    {
                        targets: 0,
                        orderable: false,
                        render: function (data, type, row, meta) {
                            return '<span title="' + row.label + '/' + row.comment + '">' + '<input class="icheckbox_flat-blue" type="checkbox" data-id="'+row.positionId+'" style="margin:0;"  name="ids" value="' + row.volume + '">' + "  " + data + '</span>';
                        }
                    },
                    {
                        targets:7,
                        render: function (data, type, row, meta) {
                            return data / 100;
                        }
                    },
                    {
                        targets: 8,
                        render: function (data, type, row, meta) {
                            if (_symbols != null) {
                                var lot = 0.00;
                                $.each(_symbols, function () {
                                    if (this.symbolId == row.symbolId) {
                                        var minlot = 0.00;
                                        if (this.assetClass == 1 || this.assetClass == 2)
                                            minlot = 0.01;
                                        else {
                                            minlot = 1;
                                        }
                                        lot = row.volume / this.minOrderVolume * minlot;
                                        return false;
                                    }
                                });
                                return lot.toFixed(2);
                            }
                            return 0.00;
                        }
                    },
                    {

                    },
                    {
                        targets: [9, 10],
                        render: function (data, type, row, meta) {
                            result = moment(data).format('YYYY-MM-DD hh:mm:ss');
                            return result;
                        }
                    },
                    {
                        targets: [11, 12, 13, 14],
                        orderable: false,
                        render: function (data, type, row, meta) {
                            if (data != null) {
                                if (_symbols != null) {
                                    var price = 0.00;
                                    $.each(_symbols, function () {
                                        if (this.symbolId == row.symbolId) {
                                            price = data.toFixed(this.pipPosition);
                                            return false;
                                        }
                                    });
                                    return price;
                                }
                            }
                            return data;
                        }
                    },
                    {
                        targets: [15],
                        render: function (data, type, row, meta) {
                            return (row.volume / 100 * row.marginRate / _connect.preciseLeverage).toFixed(2);
                        }
                    },
                    {
                        targets: [16],
                        render: function (data, type, row, meta) {
                            return (data / 100 * 2).toFixed(2);
                        }
                    },
                    {
                        targets: [17],
                        render: function (data, type, row, meta) {
                            return (data / 100).toFixed(2);
                        }
                    },
                    {
                        targets: 19,
                        render: function (data, type, row, meta) {
                            var result = row.profit + row.swap + row.commission * 2;
                            return (result / 100).toFixed(2);
                        }
                    },
                ],
                footerCallback: function (tfoot, data, start, end, display) {
                    var api = this.api(), data;

                    var intVal = function (i) { return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0; };

                    total = api.column(11).data().reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                    pageTotal = api.column(11, { page: 'current' }).data().reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                    $(api.column(11).footer()).html('$' + pageTotal.toFixed(2) + "/" + '$' + total.toFixed(2));
                }
            });
        $("#search").keyup(function () { table_pos.api().search($("#search").val()).draw(); });
        $("#refrash").click(function () {
            RefrashPosition();
        });
        //显示隐藏列
        $('.toggle-vis').on('change', function (e) {
            e.preventDefault();
            console.log($(this).attr('data-column'));
            var column = table_pos.api().column($(this).attr('data-column'));
            column.visible(!column.visible());
        });

        $("#table-pos tbody").on("change", 'tr input[name="ids"]', function () {
            var $tr = $(this).parents('tr');
            var row = table_pos.api().row($tr);
            var data = row.data();

            if ($(this).is(':checked')) {
                _selectedPositions.push({
                    positionId: $(this).attr("data-id"),
                    volume: data.volume,
                    tradeSide: data.tradeSide,
                    netProfit: 0.00,
                    symbolName: data.symbolName,
                });
            }
            else {
                var tempId = $(this).attr("data-id");
                var tempselected = _selectedPositions.filter(function (item) {
                    return item.positionId !=tempId ;
            });
                _selectedPositions = tempselected;
            }
        });
        //#endregion

        $('#new-tool').on('click', function (e) {
            e.preventDefault();
            if ($("#new-box").hasClass("collapsed-box")) {
                $("#amend-box").addClass("collapsed-box");
                $("#order-box").addClass("collapsed-box");
                $(".fa", "#amend-tool").removeClass("fa-minus").addClass('fa-plus');
                $(".fa", "#order-tool").removeClass("fa-minus").addClass('fa-plus');
                scrollTo(0, 0);
            }
        });
        $('#amend-tool').on('click', function (e) {
            e.preventDefault();
            if ($("#amend-box").hasClass("collapsed-box")) {
                $("#new-box").addClass("collapsed-box");
                $("#order-box").addClass("collapsed-box");
                $(".fa", "#new-tool").removeClass("fa-minus").addClass('fa-plus');
                $(".fa", "#order-tool").removeClass("fa-minus").addClass('fa-plus');
                scrollTo(0, 0);
            }
        });
        $('#order-tool').on('click', function (e) {
            e.preventDefault();
            if ($("#order-box").hasClass("collapsed-box")) {
                $("#amend-box").addClass("collapsed-box");
                $("#new-box").addClass("collapsed-box");
                $(".fa", "#amend-tool").removeClass("fa-minus").addClass('fa-plus');
                $(".fa", "#new-tool").removeClass("fa-minus").addClass('fa-plus');
                scrollTo(0, 0);
            }
        });

        //#region 设置新建订单和修改订单的值

        //symbolcheck选中状态为false时的事件
        $("#symbolcheck").on("ifUnchecked", function () {
            $(".clear-data").val("");
            $("#new-symbol").val(1);
            $("#new-symbol").select2().val(1).trigger("change");
        });

        //table-pos行点击事件
        $("#table-pos tbody").on("click", 'tr', function () {
            //var $tr = $(this).parents('tr');

            var row = table_pos.api().row($(this));
            var data = row.data();
            //清空数据
            $(".clear-data").val("");

            //#region Set Amend
            $("#amend-id").val(data.positionId);
            $("#amend-symbol").val(data.symbolName);
            $("#amend-tradeSide").val(data.tradeSide);
            $("#amend-price").val(data.entryPrice);
            if (data.takeProfit != null) {
                $("#amend-takeprofitprice").val(data.takeProfit);
            }
            if (data.stopLoss != null) {
                $("#amend-stoplossprice").val(data.stopLoss);
            }
            //#endregion

            //#region Set New
            if ($("#symbolcheck").is(':checked')) {
                //Set new-symbol
                var selectvalue = data.symbolId;
                $("#new-symbol").val(selectvalue);
                var showsymbol = $("#new-symbol").find("option:selected").text();
                $("#new-symbol").select2().val(selectvalue).trigger("change");
                $("#new-volume").val(data.volume/100);
                //Set tradetype
                var radio = GetRadioValue("new-tradetype");
                if (data.tradeSide == "BUY" && data.tradeSide.toLowerCase() != radio) {
                    $("#new-tradetypesell").iCheck("uncheck");
                    $("#new-tradetypebuy").iCheck("check");
                }
                if (data.tradeSide == "SELL" && data.tradeSide.toLowerCase() != radio) {
                    $("#new-tradetypebuy").iCheck("uncheck");
                    $("#new-tradetypesell").iCheck("check");
                }

                if (data.takeProfit != null) {
                    $("#new-takeprofit").val(data.takeProfit);
                }
                if (data.stopLoss != null) {
                    $("#new-stoploss").val(data.stopLoss);
                }
                if (data.label != null) {
                    $("#new-label").val(data.label);
                }
                if (data.comment != null) {
                    $("#new-comment").val(data.comment);
                }
            }
            //#endregion
        });

        function GetRadioValue(RadioName) {
            var obj;
            obj = document.getElementsByName(RadioName);
            if (obj != null) {
                var i;
                for (i = 0; i < obj.length; i++) {
                    if (obj[i].checked) {
                        return obj[i].value;
                    }
                }
            }
            return null;
        };
        //#endregion

        //#region 设置select(new-symbol) Select2
        //初始化Select2
        $('.select2').select2();

        function GetSymbolList() {
            $.each(_symbols, function () {
                if(this.symbolId==1)
                    $("#new-symbol").append("<option value='" + this.symbolId + "' selected >" + this.symbolName + "</option>");
                else
                    $("#new-symbol").append("<option value='" + this.symbolId + "'>" + this.symbolName + "</option>");
            });
        }
        //#endregion

        //#region 设置一些细节
        //Enable check and uncheck all functionality
        //$(".checkbox-toggle").click(function () {
        //    var clicks = $(this).data('clicks');
        //    if (clicks) {
        //        //Uncheck all checkboxes
        //        $(".mailbox-messages input[type='checkbox']").iCheck("uncheck");
        //        $(".fa", this).removeClass("fa-check-square-o").addClass('fa-square-o');
        //    } else {
        //        //Check all checkboxes
        //        $(".mailbox-messages input[type='checkbox']").iCheck("check");
        //        $(".fa", this).removeClass("fa-square-o").addClass('fa-check-square-o');
        //    }
        //    $(this).data("clicks", !clicks);
        //});
        //$(".checkbox-toggle").click(function () {
        //    var clicks = $(this).data('clicks');
        //    if (clicks) {
        //        //Uncheck all checkboxes
        //        $(".mailbox-messages input[type='checkbox']").attr("checked",false);
        //        $(".fa", this).removeClass("fa-check-square-o").addClass('fa-square-o');
        //    } else {
        //        //Check all checkboxes
        //        $(".mailbox-messages input[type='checkbox']").attr("checked",true);
        //        $(".fa", this).removeClass("fa-square-o").addClass('fa-check-square-o');
        //    }
        //    $(this).data("clicks", !clicks);
        //});
        //#endregion

        //#region 页面加载时执行的方法
        GetSymbol();
        GetAccountInfo();
        setTimeout(GetPrice(), 1000);
        //#endregion
        });
    </script>
}
