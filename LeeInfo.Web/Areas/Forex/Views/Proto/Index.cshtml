@using Connect_API.Accounts
@using Connect_API.Trading
@model Tuple<TradingAccount, List<Position>, List<Deal>, List<FrxCbotset>>
@{
    var actionName = ViewContext.RouteData.Values["action"].ToString();
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
    ViewData["action"] = actionName;
    ViewData["controller"] = controllerName;
    ViewData["area"] = areaName;
    ViewData["Title"] = controllerName;
    string path = "/" + areaName + "/" + controllerName;
}
<section class="content-header">
    <h1>
        @ViewData["action"]
        <small>@ViewData["controller"]</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> @ViewData["area"]</a></li>
        <li class="active"> @ViewData["controller"]</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">Monthly Recap Report</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <div class="btn-group">
                            <button type="button" class="btn btn-box-tool dropdown-toggle" data-toggle="dropdown">
                                <i class="fa fa-wrench"></i>
                            </button>
                            <ul class="dropdown-menu" role="menu">
                                <li><a href="#">Action</a></li>
                                <li><a href="#">Another action</a></li>
                                <li><a href="#">Something else here</a></li>
                                <li class="divider"></li>
                                <li><a href="#">Separated link</a></li>
                            </ul>
                        </div>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-8">
                            <p class="text-center">
                                <strong>Sales: 1 Jan, 2014 - 30 Jul, 2014</strong>
                            </p>
                            <div class="chart">
                                <!-- Sales Chart Canvas -->
                                <canvas id="lineChart" style="height: 283px; width: 856px;" width="856" height="283"></canvas>
                            </div>
                            <!-- /.chart-responsive -->
                        </div>
                        <!-- /.col -->
                        <div class="col-md-4">
                            <p class="text-center">
                                <strong>Goal Completion</strong>
                            </p>
                            <div class="progress-group">
                                <span class="progress-text">Add Products to Cart</span>
                                <span class="progress-number"><b>160</b>/200</span>
                                <div class="progress sm">
                                    <div class="progress-bar progress-bar-aqua" style="width: 80%"></div>
                                </div>
                            </div>
                            <!-- /.progress-group -->
                            <div class="progress-group">
                                <span class="progress-text">Complete Purchase</span>
                                <span class="progress-number"><b>310</b>/400</span>
                                <div class="progress sm">
                                    <div class="progress-bar progress-bar-red" style="width: 80%"></div>
                                </div>
                            </div>
                            <!-- /.progress-group -->
                            <div class="progress-group">
                                <span class="progress-text">Visit Premium Page</span>
                                <span class="progress-number"><b>480</b>/800</span>
                                <div class="progress sm">
                                    <div class="progress-bar progress-bar-green" style="width: 80%"></div>
                                </div>
                            </div>
                            <!-- /.progress-group -->
                            <div class="progress-group">
                                <span class="progress-text">Send Inquiries</span>
                                <span class="progress-number"><b>250</b>/500</span>
                                <div class="progress sm">
                                    <div class="progress-bar progress-bar-yellow" style="width: 80%"></div>
                                </div>
                            </div>
                            <!-- /.progress-group -->
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                </div>
                <!-- ./box-body -->
                <div class="box-footer">
                    <div class="row">
                        @{
                            double equity = 0;
                            double unrnet = 0;
                            double balance = Math.Round(Convert.ToDouble(Model.Item1.Balance), 2);
                            double margin = 0;
                            double freemargin = 0;
                            double level = Convert.ToInt32(Model.Item1.Leverage);
                            foreach (var p in Model.Item2)
                            {
                                unrnet += Convert.ToDouble(p.Profit);
                                unrnet += Convert.ToDouble(p.Swap);
                                unrnet += Convert.ToDouble(p.Commission);
                                margin += Convert.ToDouble(p.Volume) * Convert.ToDouble(p.MarginRate) / level;
                            }
                            unrnet = Math.Round(unrnet, 2);
                            margin = Math.Round(margin, 2);
                            equity = Math.Round(balance + unrnet, 2);
                            freemargin = Math.Round(equity - margin, 2);
                            var marginlevel = Math.Round(equity / margin * 100, 2);
                        }
                        <div class="col-sm-2 col-xs-4">
                            <div class="description-block border-right">
                                <h5 class="description-header">$@balance</h5>
                                <span class="description-text">BALANCE</span>
                            </div>
                            <!-- /.description-block -->
                        </div>
                        <!-- /.col -->
                        <div class="col-sm-2 col-xs-4">
                            <div class="description-block border-right">
                                <h5 class="description-header">$@equity</h5>
                                <span class="description-text">EQUITY</span>
                            </div>
                            <!-- /.description-block -->
                        </div>
                        <!-- /.col -->
                        <div class="col-sm-2 col-xs-4">
                            <div class="description-block border-right">
                                <h5 class="description-header">$@unrnet</h5>
                                <span class="description-text">UNR.NET</span>
                            </div>
                            <!-- /.description-block -->
                        </div>
                        <!-- /.col -->
                        <div class="col-sm-2 col-xs-4">
                            <div class="description-block border-right">
                                <h5 class="description-header">$@margin</h5>
                                <span class="description-text">MARGIN USED</span>
                            </div>
                            <!-- /.description-block -->
                        </div>
                        <!-- /.col -->
                        <div class="col-sm-2 col-xs-4">
                            <div class="description-block border-right">
                                <h5 class="description-header">$@freemargin</h5>
                                <span class="description-text">FREE MARGIN</span>
                            </div>
                            <!-- /.description-block -->
                        </div>
                        <!-- /.col -->
                        <div class="col-sm-2 col-xs-4">
                            <div class="description-block">
                                <h5 class="description-header">@marginlevel %</h5>
                                <span class="description-text">MARGIN LEVEL</span>
                            </div>
                            <!-- /.description-block -->
                        </div>
                    </div>
                    <!-- /.row -->
                </div>
                <!-- /.box-footer -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="nav-tabs-custom">
                <!-- Tabs within a box -->
                <ul class="nav nav-tabs pull-right">
                    <li class="active"><a href="#signal" data-toggle="tab">Signal</a></li>
                    <li><a href="#position" data-toggle="tab">Position</a></li>
                    <li><a href="#history" data-toggle="tab">Histroy</a></li>
                    <li class="pull-left header"><i class="fa fa-inbox"></i> @Model.Item1.AccountNumber</li>
                </ul>
                <div class="tab-content">
                    <div class="chart tab-pane active table-responsive" id="signal" style="position: relative;height:600px">
                        <table id="example1" class="table  table-bordered table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        Symbol
                                    </th>
                                    <th>
                                        Volume
                                    </th>
                                    <th>
                                        Brk
                                    </th>
                                    <th>
                                        Distance
                                    </th>
                                    <th>
                                        IsTrade
                                    </th>
                                    <th>
                                        IsBreak
                                    </th>
                                    <th>
                                        IsBrkFirst
                                    </th>
                                    <th>
                                        R/A/M/S
                                    </th>
                                    <th>
                                        Cr
                                    </th>
                                    <th>
                                        Ca
                                    </th>
                                    <th>
                                        Sr
                                    </th>
                                    <th>
                                        Sa
                                    </th>
                                    <th>
                                        Ra
                                    </th>
                                    <th>
                                        Signal
                                    </th>
                                    <th>
                                        Sbrk
                                    </th>
                                    <th>
                                        Alike
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Item4)
                                {
                                    double srsa = 0;
                                    if (item.Sr.HasValue && item.Sa.HasValue)
                                    {
                                        srsa = Math.Abs((double)(item.Sr - item.Sa));
                                    }
                                    string isbrk = null;
                                    if (Math.Abs((double)item.Sr) > item.Brk)
                                    {
                                        isbrk = "break";
                                    }
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Symbol)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.InitVolume)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Brk)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Distance)
                                        </td>
                                        <td>
                                            <input type="checkbox" checked="@item.IsTrade" class="flat-blue" />
                                        </td>
                                        <td>
                                            <input type="checkbox" checked="@item.IsBreak" class="flat-blue" />
                                        </td>
                                        <td>
                                            <input type="checkbox" checked="@item.IsBrkFirst" class="flat-blue" />
                                        </td>
                                        <td>
                                            @item.Result/@item.Average/@item.Magnify/@item.Sub
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Cr)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Ca)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Sr)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Sa)
                                        </td>
                                        <td>
                                            @srsa
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Signal)
                                        </td>
                                        <td>
                                            @isbrk
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Alike)
                                        </td>
                                        <td style="min-width:150px">
                                            <a id="editModal" data-toggle="modal" asp-action="Edit" asp-route-id="@item.Id" data-target="#modal-action" class="btn-sm btn-primary" style="width:70px;margin-right:5px; min-width:50px;">
                                                <i class="glyphicon glyphicon-pencil"></i> Edit
                                            </a>
                                            <a id="deleteModal" data-toggle="modal" asp-action="Delete" asp-route-id="@item.Id" data-target="#modal-action" class="btn-sm btn-warning" style="width:70px;margin-right:5px; min-width:50px;">
                                                <i class="glyphicon glyphicon-trash"></i> Delete
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </div>
                    <div class="chart tab-pane  table-responsive" id="position" style="position: relative;height:600px">
                        <table id="example2" class="table  table-bordered table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        ID(Label/Comment)
                                    </th>
                                    <th>
                                        EntryTime
                                    </th>
                                    <th>
                                        Symbol
                                    </th>
                                    <th>
                                        Volume
                                    </th>
                                    <th>
                                        TradeType
                                    </th>
                                    <th>
                                        EntryPrice
                                    </th>
                                    <th>
                                        CurrentPrice
                                    </th>
                                    <th>
                                        Swap
                                    </th>
                                    <th>
                                        Commission
                                    </th>
                                    <th>
                                        Channel
                                    </th>
                                    <th>
                                        Pips
                                    </th>
                                    <th>
                                        NetProfit
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Item2)
                                {
                                    <tr>
                                        <td>
                                            <span title="@item.Label / @item.Comment">@item.PositionID</span>
                                        </td>
                                        <td>
                                        </td>
                                        <td>
                                            @item.SymbolName
                                        </td>
                                        <td>
                                            @item.Volume
                                        </td>
                                        <td>
                                            @item.TradeSide
                                        </td>
                                        <td>
                                            @item.EntryPrice
                                        </td>
                                        <td>
                                            @item.CurrentPrice
                                        </td>
                                        <td>
                                            @item.Swap
                                        </td>
                                        <td>
                                            @item.Commission
                                        </td>
                                        <td>
                                            @item.Channel
                                        </td>
                                        <td>
                                            @item.ProfitInPips
                                        </td>
                                        <td>
                                            @{
                                                var net = Convert.ToDouble(item.Profit);
                                                net += Convert.ToDouble(item.Swap);
                                                net += Convert.ToDouble(item.Commission);
                                            }
                                            @net
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="chart tab-pane table-responsive" id="history" style="position: relative;height:600px">
                        <table id="example3" class="table  table-bordered table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        ID(Label/Comment)
                                    </th>
                                    <th>
                                        Symbol
                                    </th>
                                    <th>
                                        Direction
                                    </th>
                                    <th>
                                        OpeningTime
                                    </th>
                                    <th>
                                        ClosingTime
                                    </th>
                                    <th>
                                        EntryPrice
                                    </th>
                                    <th>
                                        ClosingPrice
                                    </th>
                                    <th>
                                        Volume
                                    </th>
                                    <th>
                                        Commission
                                    </th>
                                    <th>
                                        Swap
                                    </th>
                                    <th>
                                        Pips
                                    </th>
                                    <th>
                                        NetProfit
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Item3)
                                {
                                    {
                                        <tr>
                                            <td>
                                                <span title="@item.Label / @item.Comment">@item.DealID</span>
                                            </td>
                                            <td>
                                                @item.SymbolName
                                            </td>
                                            <td>
                                                @item.TradeSide
                                            </td>
                                            <td>
                                            </td>
                                            <td>
                                            </td>
                                            <td>
                                                @item.PositionCloseDetails.EntryPrice
                                            </td>
                                            <td>
                                                @item.ExecutionPrice
                                            </td>
                                            <td>
                                                @item.PositionCloseDetails.ClosedVolume
                                            </td>
                                            <td>
                                                @item.PositionCloseDetails.Commission
                                            </td>
                                            <td>
                                                @item.PositionCloseDetails.Swap
                                            </td>
                                            <td>
                                                @item.PositionCloseDetails.ProfitInPips
                                            </td>
                                            <td>
                                                @{
                                                    var net = Convert.ToDouble(item.PositionCloseDetails.Profit);
                                                    net += Convert.ToDouble(item.PositionCloseDetails.Swap);
                                                    net += Convert.ToDouble(item.PositionCloseDetails.Commission);
                                                }
                                                @net
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@{ChartJSCore.Models.Chart chart = (ChartJSCore.Models.Chart)ViewData["chart"]; }
@section Scripts{
    <script>
        $(function () {
            $('#example1').DataTable(
                {
                'paging': false,
                'order': [[13, "desc"]],
                'scrollY': "480",
                initComplete: function () {
                    $("#mytool").append('<a id="createModal" data-toggle="modal" data-target="#modal-action" class="btn btn-primary" href="@path/Create"><i class="glyphicon glyphicon-plus"></i> Create</a>');
                }
            })
            $('#example2').DataTable({
                'paging': false,
                'scrollY': "480",
            })
            $('#example3').DataTable({
                'paging': false,
                'scrollY': "480",
            })
        })
        function myrefresh() {
            window.location.reload();
        }
        setTimeout('myrefresh()', 60000); //指定1秒刷新一次

                @Html.Raw(chart.CreateChartCode("lineChart"));
    </script>
}
