@model AppIdentityUser
@{
    Layout = "_CreateEditLayout";
    var actionName = ViewContext.RouteData.Values["action"].ToString();
    var controllerName = ViewContext.RouteData.Values["controller"].ToString();
    var areaName = ViewContext.RouteData.Values["area"].ToString();
    ViewData["action"] = actionName;
    ViewData["controller"] = controllerName;
    ViewData["area"] = areaName;
}
<div class="col-md-12">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @Html.HiddenFor(x => x.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, "用户名", htmlAttributes: new { @class = "control-label" })
        <p class="form-control-static">@Model.UserName</p>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, "邮箱", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="control-label">密码</label>
        <input name="password" type="password" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="Sex" class="control-label"></label>
        <select asp-for="Sex" asp-items="@Html.GetEnumSelectList(typeof(SexType))" class="form-control"></select>
        <span asp-validation-for="Sex" class="text-danger"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserImage, "头像", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.UserImage, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UserImage, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label class="control-label">
            ConnectAPI
        </label>
        <div class="checkbox icheck">
            <input type="checkbox" class="flat-blue" asp-for="ConnectAPI"/>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientId, "ClientId", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ClientId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientSecret, "ClientSecret", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.ClientSecret, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ClientSecret, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AccessToken, "AccessToken", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.AccessToken, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AccessToken, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RefreshToken, "RefreshToken", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.RefreshToken, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.RefreshToken, "", new { @class = "text-danger" })
    </div>
</div>
<script>
    $('input[type="checkbox"].flat-blue, input[type="radio"].flat-blue').iCheck({
        checkboxClass: 'icheckbox_flat-blue',
        radioClass: 'iradio_flat-blue'
    });
</script>